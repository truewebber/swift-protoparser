syntax = "proto3";

package test;

//import "google/protobuf/descriptor.proto";
import "simple.proto";

//extend google.protobuf.FieldOptions {
//  string custom_option = 50000;
//}

message Complex {
  //string name = 1 [(custom_option) = "test"];
  string name = 1;
  repeated int32 numbers = 2;
  map<string, string> attributes = 3;
  
  enum Status {
    UNKNOWN = 0;
    ACTIVE = 1;
    INACTIVE = 2;
  }
  
  Status status = 4;
  
  message Nested {
    string value = 1;
  }
  
  Nested nested = 5;
  
  reserved 6, 8 to 10;
  reserved "foo", "bar";
}

service TestService {
  rpc GetComplex(Simple) returns (Complex);
  rpc StreamComplex(Simple) returns (stream Complex);
  rpc ProcessComplex(stream Complex) returns (Simple);
  rpc BidirectionalStream(stream Simple) returns (stream Complex);
}
