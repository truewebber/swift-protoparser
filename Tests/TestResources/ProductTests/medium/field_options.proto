syntax = "proto3";

package medium.options;

import "google/protobuf/descriptor.proto";

// Message with various field types for comprehensive testing
message FieldOptionsMessage {
  string email = 1;
  string username = 2;
  string password = 3;
  int32 age = 4;
  string bio = 5;
  repeated string tags = 6;
  map<string, string> metadata = 7;
  oneof contact_method {
    string phone = 8;
    string social_handle = 9;
  }
  Status status = 10;
}

// Enum for status testing
enum Status {
  STATUS_UNKNOWN = 0;
  ACTIVE = 1;
  INACTIVE = 2;
  SUSPENDED = 3;
  DELETED = 4;
}

// Service with comprehensive method patterns
service OptionsService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  FieldOptionsMessage user = 1;
  bool found = 2;
}

message CreateUserRequest {
  FieldOptionsMessage user = 1;
}

message CreateUserResponse {
  string user_id = 1;
  bool success = 2;
  string message = 3;
}

message UpdateUserRequest {
  string user_id = 1;
  FieldOptionsMessage user = 2;
}

message UpdateUserResponse {
  bool success = 1;
  string message = 2;
}

message DeleteUserRequest {
  string user_id = 1;
}

message DeleteUserResponse {
  bool success = 1;
  string message = 2;
}

message ListUsersRequest {
  int32 page_size = 1;
  string page_token = 2;
  Status status_filter = 3;
}

message ListUsersResponse {
  repeated FieldOptionsMessage users = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}
